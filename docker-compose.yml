version: "3.7"
services:

  # Port numbers (normal port number + 40000):
  # - mssql    41433
  # - mysql    43306
  # - postgres 45432


  # TODO(js) Re-write .travis.yml 
  #  - See https://www.rockyourcode.com/docker-compose-postgres-and-travis-ci

# TODO(js) For Travis, should we also:
# - install microsoft's sql cli tools ?
# - invoke a local script that performs a similar wait to docker-db-init-mssql.sh ?
#   (here we'd be waiting outside docker, for mssql to start, before running our tests)
# - We can maybe use travisretry here?
#   See https://docs.travis-ci.com/user/common-build-problems/#timeouts-installing-dependencies

# TODO(js) Look into Docker Healthcheck - suggested here https://dzone.com/articles/8-lessons-learned-using-docker-compose


  # TODO(js) Update README.md section on Testing.

  # TODO(js) Cleanup tests
  # TODO(js) Improve tests
  # TODO(js) Split test structure: file per driver -> file per dialect


  mssql:
    # See https://hub.docker.com/_/microsoft-mssql-server
    image: mcr.microsoft.com/mssql/server:2017-latest-ubuntu
    container_name: schema-test-mssql
    ports:
      - 127.0.0.1:41433:1433
    volumes:
      - ./docker-entrypoint-mssql.sh:/entrypoint.sh:ro
      - ./docker-db-init-mssql.sh:/db-init.sh:ro
      - ./docker-db-init-mssql.sql:/init.sql:ro
    command: /bin/bash /entrypoint.sh
    environment:
      ACCEPT_EULA: Y 
      MSSQL_PID: Developer
      SA_PASSWORD: 7kRZ4mUsSD4XedMq

  mysql:
    # See https://hub.docker.com/_/mysql
    image: mysql:latest
    container_name: schema-test-mysql
    command: --default-authentication-plugin=mysql_native_password
    restart: always
    ports:
      - 127.0.0.1:43306:3306
    environment:
      MYSQL_RANDOM_ROOT_PASSWORD: 'yes'
      MYSQL_DATABASE: test_db
      MYSQL_USER: mysql_test_user
      MYSQL_PASSWORD: password

  # TODO(js) Oracle

  postgres:
    # See https://hub.docker.com/_/postgres
    image: postgres:latest
    container_name: schema-test-postgres
    restart: always
    ports:
      - 127.0.0.1:45432:5432

  # adminer:
  #   image: adminer
  #   container_name: schema-test-adminer
  #   restart: always
  #   ports:
  #     - 8080:8080
